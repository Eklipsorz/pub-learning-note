{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "1f095cb9122c0643",
        "type": "tabs",
        "children": [
          {
            "id": "5453228e16d5497f",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "inbox/react-router-dom v6：RouteProvider 元件用途為Provider形式來管理對應Routing並設定誰能夠使用對應Routing進行渲染.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      },
      {
        "id": "c7b54560862802d2",
        "type": "tabs",
        "children": [
          {
            "id": "163be85b7bf2f102",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "inbox/useState使用場景運用在狀態間並無關係且狀態更新較為單一簡單，useReducer使用場景運用在狀態間有關係且狀態更新較為複雜.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      },
      {
        "id": "88e0db62c011ab46",
        "type": "tabs",
        "children": [
          {
            "id": "e5f2afef593549b6",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/render/display：inline-block 是指定元素在內部呈現是以block形式為主，而外部呈現就是保持水平呈現.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      },
      {
        "id": "0234530f79885de9",
        "type": "tabs",
        "children": [
          {
            "id": "87a04c5d7949f4e4",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/study/es-modules-a-cartoon-deep-dive(1) - How ES modules work 筆記.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "184c5734690b3c9c",
    "type": "split",
    "children": [
      {
        "id": "4680111e485df9e0",
        "type": "tabs",
        "children": [
          {
            "id": "6941822edf359a99",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "域名",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "b7ac353bc18ac458",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {}
            }
          },
          {
            "id": "673bafcf0104f9cf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "byCreatedTime"
              }
            }
          }
        ],
        "currentTab": 2
      }
    ],
    "direction": "horizontal",
    "width": 419.5
  },
  "right": {
    "id": "1b728af4a278cee2",
    "type": "split",
    "children": [
      {
        "id": "91704a7a3c315761",
        "type": "tabs",
        "children": [
          {
            "id": "b1f7a905b774f5e4",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "develop/study/es-modules-a-cartoon-deep-dive(1) - How ES modules work 筆記.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3fbbeb2a69d755ad",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          },
          {
            "id": "023097852c3467d6",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "develop/study/es-modules-a-cartoon-deep-dive(1) - How ES modules work 筆記.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bcfa94e5fcde6a0e",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "10e975eb097c2cce",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "develop/study/es-modules-a-cartoon-deep-dive(1) - How ES modules work 筆記.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "active": "87a04c5d7949f4e4",
  "lastOpenFiles": [
    "develop/render/display：inline-block 是指定元素在內部呈現是以block形式為主，而外部呈現就是保持水平呈現.md",
    "inbox/useState使用場景運用在狀態間並無關係且狀態更新較為單一簡單，useReducer使用場景運用在狀態間有關係且狀態更新較為複雜.md",
    "inbox/react-router-dom：在沒採用switch 下的Route 遍歷所造成的問題-切換端點會滿足多個Route而同時在同一個頁面渲染多個Route所包含的component，解法為switch、順序、exact.md",
    "inbox/react-router-dom v6：RouteProvider 元件用途為Provider形式來管理對應Routing並設定誰能夠使用對應Routing進行渲染.md",
    "inbox/自製擁有loader功能的BrowserRouter，根據Routing作法：單純使用JS語言體系的物件語法來表示Routing中的每個Route、使用JSX語言體系的元件語法來表示Routing中的每個Route.md",
    "inbox/讓React-router根據URL切換來發送對應請求的前置處理：主要有重新定義Routing並建立BrowserRouter、將對應Routing的Router元件安裝至App.js來進行Routing和渲染.md",
    "inbox/useLoaderData是react-router v6.4 所提供的hook，其概念為會從元件所待的目前Route元件獲取loader屬性並以promise形式執行對應loader，等到該 loader 執行完畢後才會回傳資料.md",
    "inbox/react-router-dom v6 中取消掉useHistory和prompt元件，替代方案為使用useNavigate和自製一個prompt元件來使用.md",
    "inbox/Untitled 6.md",
    "develop/styled-components/styled-components：在template-literal使用&表示目前透過style.<element> 所建立的元件.md"
  ]
}