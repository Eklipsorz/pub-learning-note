{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "b223b5deb47cb9f9",
        "type": "tabs",
        "children": [
          {
            "id": "c95d65a1de739cdd",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "dev-practice/Practice - React：Input component 重構.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "184c5734690b3c9c",
    "type": "split",
    "children": [
      {
        "id": "4680111e485df9e0",
        "type": "tabs",
        "children": [
          {
            "id": "6941822edf359a99",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "請到/react-builder/question-review/refactor-Input-question領取題目，請將/components/Login/Login.js中的input組合元件做出可重複使用的元件",
                "matchingCase": true,
                "explainSearch": false,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "b7ac353bc18ac458",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {}
            }
          },
          {
            "id": "dba5e16eed67c4ca",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "byCreatedTime"
              }
            }
          },
          {
            "id": "2783517be647e26d",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 271.5
  },
  "right": {
    "id": "1b728af4a278cee2",
    "type": "split",
    "children": [
      {
        "id": "91704a7a3c315761",
        "type": "tabs",
        "children": [
          {
            "id": "b1f7a905b774f5e4",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "dev-practice/Practice - React：Input component 重構.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "023097852c3467d6",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "dev-practice/Practice - React：Input component 重構.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bcfa94e5fcde6a0e",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "10e975eb097c2cce",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "dev-practice/Practice - React：Input component 重構.md"
              }
            }
          },
          {
            "id": "de133f679a2497dd",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          }
        ],
        "currentTab": 4
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "obsidian-spaced-repetition:Review flashcards": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "switcher:Open quick switcher": false
    }
  },
  "active": "c95d65a1de739cdd",
  "lastOpenFiles": [
    "develop/React/React：Input component 重構.md",
    "dev-practice/Practice - React：Input component 重構.md",
    "develop/authentication/Symmetric-key algorithm 概念會是加密方和解密方都使用同一個鑰匙值進行加密或解密；Public-key cryptography 概念會是加密方和解密方兩方都拿獨立不同的鑰匙值來各別做加密或者解密.md",
    "develop/authentication/token會牽涉到許多頁面元件和其他元件的存取，會以集中儲存狀態和資訊的元件來共享token給各個元件的做法來管理其token和登入狀態.md",
    "dev-practice/Practice - token會牽涉到許多頁面元件和其他元件的存取，會以集中儲存狀態和資訊的元件來共享token給各個元件的做法來管理其token和登入狀態.md",
    "develop/browser/absolute URL：意指為特定資源在網路上的完整位置，其完整位置包含了該資源在網路上的完整位置、該資源在特定協定網路下的完整位置、該資源在特定協定網路之特定主機下的完整位置.md",
    "develop/OS/memory/Memory leak 是指原本可用的記憶體資源因受到特定方式而轉變(流失)成不可使用的記憶體資源.md",
    "annotation/@http___zotero.org_users_9524198_items_HFWS9Q6M.md",
    "annotation/@http___zotero.org_users_9524198_items_QNAFQUSD.md",
    "annotation/@http___zotero.org_users_local_gXnyYX7A_items_HFWS9Q6M.md",
    "annotation/@http___zotero.org_users_local_gXnyYX7A_items_2GU6KYIP.md",
    "annotation/@http___zotero.org_users_local_gXnyYX7A_items_QNAFQUSD.md",
    "develop/Express/express-session 內建的MemoryStore由於不會監測每個session的狀態來進行記憶體釋放或者管理，所以不適合做真正的session store.md",
    "develop/OS/memory",
    "develop/JavaScript/promise/promise 物件 本身代表著夾雜任務內容、任務執行狀態的物件，其物件主要由async function所回傳的或者使用Promise建構式，任務內容也是以async function或者建構式內的內容為主.md",
    "2023-08-01.md",
    "develop/React/React：使用useHttp hook至增加任務的元件之案例.md",
    "inbox/Untitled 6.md",
    "inbox/redis 分散式鎖 - 釋放.md",
    "inbox/Google Cloud Memorystore 是以提供記憶體儲存空間為主的服務.md",
    "inbox/gsutil 是用來遠端操控Cloud Storage的工具.md",
    "inbox/node.js 透過node-redis程式來與redis server連線並下達對應資料庫指令.md",
    "inbox/實體資料庫系統不需要外鍵的主因有減少不必要檢查、容納舊資料和缺失資料.md",
    "inbox/使用Google API必須透過建立對應權限的帳號並從中對應帳號的access-token(key).md",
    "inbox/RedisJSON 讓Redis 伺服器能夠以JSON形式來處理每個key上的value.md",
    "inbox/(待查)Router 元件負責定義basepath.md",
    "develop/medium 為傳遞或表達特定事物的任一方法或形式，比如表達資訊的圖片、報紙、影片，其中media為單數，medium為複數.md",
    "develop/json",
    "develop/html",
    "promise",
    "develop/css-style",
    "develop/browser",
    "draft",
    "dev-practice",
    "develop/dns",
    "develop/win-development",
    "Pasted image 20230119210755.png"
  ]
}