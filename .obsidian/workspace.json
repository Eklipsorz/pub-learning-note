{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "01aac54f020e199a",
        "type": "tabs",
        "children": [
          {
            "id": "f4ec0a2f8220140c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "inbox/React：useEffect 和 生命週期兩者是不一樣的，它的運作原理更像是資料上的同步化：將源自於props、state等其他地方的資料轉換成對應畫面並從中藉使畫面呈現的資料弄成一樣.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "d71939476d550bda",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "inbox/process synchronization：processs或thread執行後的結果肯定都會滿足於特定執行規則。data synchronization：資料只要被處理或者轉移都會滿足於特定規則或者資料內容一樣.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "053a7c80edf77247",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/Database/Transaction - Consistency 是指只要執行協議上的指定任務之後都能產生同個結果，其結果為其資料庫都會是維持著完整性、一致性的特性.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      },
      {
        "id": "4d7e8564bb2d28cf",
        "type": "tabs",
        "children": [
          {
            "id": "5e58467f5fad3edd",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "inbox/Server Side Rendering 會是指每一次客戶端向伺服器發送請求時，伺服器都會根據請求內容來將資料與模板網頁檔案做結合網頁，最後由伺服器將結果檔案回傳給客戶端.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      },
      {
        "id": "45fd3116b0cfea2d",
        "type": "tabs",
        "children": [
          {
            "id": "bf8e8094f3442434",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "inbox/React：表格製作的難點為表格本身具有較多狀態要管理和控制.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      },
      {
        "id": "4f13f1be2da1b427",
        "type": "tabs",
        "children": [
          {
            "id": "5667da49fa0eeee6",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "inbox/Single Page Application 概念上是以一個 實體 webpage 檔案為主體而構成的應用程式；Multiple-Page Application 概念上是以多個 實體webpage 檔案為主體而構成的應用程式.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "184c5734690b3c9c",
    "type": "split",
    "children": [
      {
        "id": "4680111e485df9e0",
        "type": "tabs",
        "children": [
          {
            "id": "6941822edf359a99",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "consistency",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "b7ac353bc18ac458",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {}
            }
          },
          {
            "id": "673bafcf0104f9cf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "byCreatedTime"
              }
            }
          }
        ],
        "currentTab": 2
      }
    ],
    "direction": "horizontal",
    "width": 463.5
  },
  "right": {
    "id": "1b728af4a278cee2",
    "type": "split",
    "children": [
      {
        "id": "91704a7a3c315761",
        "type": "tabs",
        "children": [
          {
            "id": "b1f7a905b774f5e4",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "inbox/React：表格製作的難點為表格本身具有較多狀態要管理和控制.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3fbbeb2a69d755ad",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          },
          {
            "id": "023097852c3467d6",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "inbox/React：表格製作的難點為表格本身具有較多狀態要管理和控制.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bcfa94e5fcde6a0e",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "10e975eb097c2cce",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "inbox/React：表格製作的難點為表格本身具有較多狀態要管理和控制.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "active": "bf8e8094f3442434",
  "lastOpenFiles": [
    "inbox/Server Side Rendering 會是指每一次客戶端向伺服器發送請求時，伺服器都會根據請求內容來將資料與模板網頁檔案做結合網頁，最後由伺服器將結果檔案回傳給客戶端.md",
    "inbox/Single Page Application 概念上是以一個 實體 webpage 檔案為主體而構成的應用程式；Multiple-Page Application 概念上是以多個 實體webpage 檔案為主體而構成的應用程式.md",
    "develop/cache hit為主的方法是從緩存存取資料但很容易被人忽略同步問題，cache miss為主的方法是從資料庫讀取資料但能選擇同步.md",
    "inbox/React：useCallback 最主要是會依據依賴項目是否變動來決定是否重建函式物件並儲存在記憶體中，若變動就建立新函式物件和新closure，接著儲存並回傳，若沒變動就以目前最新函式物件回傳.md",
    "inbox/React：useEffect 和 生命週期兩者是不一樣的，它的運作原理更像是資料上的同步化：將源自於props、state等其他地方的資料轉換成對應畫面並從中藉使畫面呈現的資料弄成一樣.md",
    "inbox/React：useEffect 的callback並不會實際如同函式呼叫那樣會按照順序執行，而是按照生命週期函式執行.md",
    "inbox/react useEffect：當元件處於mounting時，就會建立對應effect hook函式物件來綁定在該元件，在發生unmount 就會移除舊有effect.md",
    "inbox/RESTful API：端點命名法則通常會因為URI的域名限制而一律使用Spinal Case.md",
    "inbox/Untitled 10.md",
    "inbox/Untitled 8.md"
  ]
}