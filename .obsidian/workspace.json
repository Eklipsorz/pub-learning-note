{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "13b5b5f6e6ce3062",
        "type": "tabs",
        "children": [
          {
            "id": "d2c6a669a0d3cfd3",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/authentication/Untitled.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "1d5d9d0eb39d42f7",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/authentication/Symmetric-key algorithm 概念會是加密方和解密方都使用同一個鑰匙值進行加密或解密；Public-key cryptography 概念會是加密方和解密方兩方都拿獨立不同的鑰匙值來各別做加密或者解密.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ],
        "currentTab": 1
      },
      {
        "id": "722ee7620888c1b3",
        "type": "tabs",
        "children": [
          {
            "id": "b67818d17c16c4e1",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/render/原生HTML DOM元件都會有瀏覽器根據標準而開發出來的原生狀態管理實現，分別是將元件轉換成DOM物件來儲存狀態以及設定預設事件處理來變更狀態和渲染內容.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      },
      {
        "id": "8c284ed156e26639",
        "type": "tabs",
        "children": [
          {
            "id": "1aaba9b92258aba5",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/React/react-router/router-6.4/react-router-dom v6：action 函式本身使用request object來建立FormData物件並根據情況來回傳結果.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "184c5734690b3c9c",
    "type": "split",
    "children": [
      {
        "id": "4680111e485df9e0",
        "type": "tabs",
        "children": [
          {
            "id": "6941822edf359a99",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "client id",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "b7ac353bc18ac458",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {}
            }
          },
          {
            "id": "eafcf82bd388bed9",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "byCreatedTime"
              }
            }
          }
        ],
        "currentTab": 2
      }
    ],
    "direction": "horizontal",
    "width": 390.5
  },
  "right": {
    "id": "1b728af4a278cee2",
    "type": "split",
    "children": [
      {
        "id": "91704a7a3c315761",
        "type": "tabs",
        "children": [
          {
            "id": "b1f7a905b774f5e4",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "develop/React/react-router/router-6.4/react-router-dom v6：action 函式本身使用request object來建立FormData物件並根據情況來回傳結果.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3fbbeb2a69d755ad",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          },
          {
            "id": "023097852c3467d6",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "develop/React/react-router/router-6.4/react-router-dom v6：action 函式本身使用request object來建立FormData物件並根據情況來回傳結果.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bcfa94e5fcde6a0e",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "10e975eb097c2cce",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "develop/React/react-router/router-6.4/react-router-dom v6：action 函式本身使用request object來建立FormData物件並根據情況來回傳結果.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "obsidian-spaced-repetition:Review flashcards": false,
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "1aaba9b92258aba5",
  "lastOpenFiles": [
    "develop/React/debouncing 在電腦開發實踐的手段，在連續發送事件觸發的場景下，以確保能取得最後的事件觸發資訊的形式來降低請求方和處理方之間的回應速度。.md",
    "develop/React/React：useEffect & Dependencies 之間關係就在於每一次在updating階段時effect被觸發時會檢查是否有任一dependency有改變而執行對應的callback.md",
    "develop/React/react-router/router-6.4/errorElement 屬性用途是指定當Route的對應元件發生錯誤時所要渲染的畫面內容；useRouteError 用途則是專門從擷取到錯誤資訊物件的Router物件獲取對應錯誤資訊.md",
    "develop/render/原生HTML DOM元件都會有瀏覽器根據標準而開發出來的原生狀態管理實現，分別是將元件轉換成DOM物件來儲存狀態以及設定預設事件處理來變更狀態和渲染內容.md",
    "develop/authentication/Symmetric-key algorithm 概念會是加密方和解密方都使用同一個鑰匙值進行加密或解密；Public-key cryptography 概念會是加密方和解密方兩方都拿獨立不同的鑰匙值來各別做加密或者解密.md",
    "develop/authentication/OAuth 會是標準、協定，其內容為如何在不需要將 \"擁有資源使用權限的使用者帳密\" 給予 特定服務A的情況下，發放資源使用權限給特定服務A來代表使用者去做特定事情.md",
    "develop/authentication/OpenID 是一個開放式協定和標準，定義特定應用服務A如何與分散式身份認證系統進行認證；OpenID Connect主要以OAuth 2.0協定作為基礎來做驗證和權限分發，權限分發會是以token為表示來分發.md",
    "develop/React/react-router/router-6.4/使用useNavigation來實現確保一旦提交就不會有額外的提交內容，手段可以是一旦提交就關閉提交按鈕，按鈕顯示submitting.md",
    "inbox/當在async 函式內碰到指定await promise指派給特定識別字時，await會以分配記憶體來定義存放resolve的結果值，並賦予其識別字1，再以promise.then來設定resolve的結果值指派給識別字1所對應的內容.md",
    "develop/Redis/Key eviction 是Redis 釋放記憶體空間的策略.md"
  ]
}