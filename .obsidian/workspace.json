{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "23d3249d7df7a4fc",
        "type": "tabs",
        "children": [
          {
            "id": "10a969c4a1cdd80c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/Network/一個主機發送封包的模式- unicast 1對1 broadcast 1對all multicast 1對多.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "548af23a300794a4",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/Network/anycast 意指為一個傳遞方傳遞資料至可任意選擇一個接收方的群組，而群組內會有N個接收方。應用為決定路由.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "37fd638118d849b3",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/Network/網路位址和接收方節點間的對應關係：unicast為一對一、broadcast或multicast為一對多、anycast為一對多但會由群組決定一個接收方來接收傳遞方的傳遞內容.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "51b63d25223fc44a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/React/react-router/router-6.4/使用useNavigation來實現確保一旦提交就不會有額外的提交內容，手段可以是一旦提交就關閉提交按鈕，按鈕顯示submitting.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "8fc402905ba9f917",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/React/react-router/router-6.4/Untitled.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ],
        "currentTab": 4
      },
      {
        "id": "a359a71bbe568a79",
        "type": "tabs",
        "children": [
          {
            "id": "ea54320a05303ed8",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "develop/React/react-router/router-6.4/Untitled.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "184c5734690b3c9c",
    "type": "split",
    "children": [
      {
        "id": "4680111e485df9e0",
        "type": "tabs",
        "children": [
          {
            "id": "6941822edf359a99",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "multicast",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "b7ac353bc18ac458",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {}
            }
          },
          {
            "id": "673bafcf0104f9cf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "byCreatedTime"
              }
            }
          }
        ],
        "currentTab": 2
      }
    ],
    "direction": "horizontal",
    "width": 390.5
  },
  "right": {
    "id": "1b728af4a278cee2",
    "type": "split",
    "children": [
      {
        "id": "91704a7a3c315761",
        "type": "tabs",
        "children": [
          {
            "id": "b1f7a905b774f5e4",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "develop/React/react-router/router-6.4/Untitled.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3fbbeb2a69d755ad",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          },
          {
            "id": "023097852c3467d6",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "develop/React/react-router/router-6.4/Untitled.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bcfa94e5fcde6a0e",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "10e975eb097c2cce",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "develop/React/react-router/router-6.4/Untitled.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 200,
    "collapsed": true
  },
  "active": "8fc402905ba9f917",
  "lastOpenFiles": [
    "develop/React/react-router/router-6.4/當loader的部分非同步任務執行過慢，可以透過defer來推遲至component渲染時才開始同時執行，並且根據suspense元件和await元件包覆著推遲任務來根據請求回應和狀態來渲染.md",
    "當在async 函式內碰到指定await promise指派給特定識別字時，await會以分配記憶體來定義存放resolve的結果值，並賦予其識別字1，再以promise.then來設定resolve的結果值指派給識別字1所對應的記憶體內容.md",
    "develop/React/react-router/router-6.4/Untitled.md",
    "inbox/當在async 函式內碰到指定await promise指派給特定識別字時，await會以分配記憶體來定義存放resolve的結果值，並賦予其識別字1，再以promise.then來設定resolve的結果值指派給識別字1所對應的內容.md",
    "inbox/當在async 函式內碰到指定await promise指派給特定識別字時，await會以分配記憶體來定義存放resolve的結果值，並賦予其識別字1，再以promise.then來設定resolve的結果值指派給識別字1所對應記憶體內容.md",
    "inbox/當在async 函式內碰到指定await promise指派給特定識別字時，await會以分配記憶體來定義存放resolve的結果值，並賦予其識別字1，再以promise.then來設定resolve的結果值指派給識別字1所對應的記憶體內容.md",
    "develop/styled-components/styled-components 是一個專注將特定CSS樣式綁定在特定元件的第三方套件，其調用的方法會回傳具有特定樣式的元件.md",
    "develop/Redis/redis key上的過期策略為active deletion + passive deletion.md",
    "inbox/react-router v6 ：能將使用者導向至指定頁面的元件、建立nested Route 元件方式、建造一個nested route 的概念.md",
    "develop/React/react-router/router-6.4/當loader的部分非同步任務執行過慢，可以透過defer來推遲至component渲染時才開始同時執行，並且根據suspense元件和await元件包覆著推遲任務來根據請求回應來渲染以及若沒成功成載入時所要渲染的fallback.md"
  ]
}