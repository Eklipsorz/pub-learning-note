{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "3490d539708f4dff",
        "type": "leaf",
        "dimension": 52.63919016630514,
        "state": {
          "type": "markdown",
          "state": {
            "file": "A closer look at jsx (1).md",
            "mode": "source",
            "source": false
          }
        }
      },
      {
        "id": "9a12a2067cb9eeab",
        "type": "leaf",
        "dimension": 47.360809833694866,
        "state": {
          "type": "markdown",
          "state": {
            "file": "develop/React/React Composition 實現概念方式有Containment 和 Specialization，前者是component A 會包含多個其他獨立的component ，後者是component A 會是從另一個component B演化過來的component.md",
            "mode": "source",
            "source": false
          }
        }
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "aae06c38208a1036",
    "type": "split",
    "children": [
      {
        "id": "85a59d2c54c575cc",
        "type": "tabs",
        "children": [
          {
            "id": "d9546d4d0b544fb7",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {}
            }
          },
          {
            "id": "423a385f7547e8c2",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "props",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 477
  },
  "right": {
    "id": "acffa8a6b0911db3",
    "type": "split",
    "children": [
      {
        "id": "b058356d42c47057",
        "type": "tabs",
        "children": [
          {
            "id": "a6555039f4ed3291",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "A closer look at jsx (1).md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3cf7a667459c6b46",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "active": "3490d539708f4dff",
  "lastOpenFiles": [
    "develop/React/React Composition 實現概念方式有Containment 和 Specialization，前者是component A 會包含多個其他獨立的component ，後者是component A 會是從另一個component B演化過來的component.md",
    "develop/React/React：將component 視為函式來呼叫，以資料來當函式的參數，最後處理的結果會是對應資料的渲染畫面.md",
    "develop/React/React - 可使用function 和 class 來建構react component.md",
    "develop/React/React： composition 是利用has a關係來打造元件間的關係，而inheritance則是利用is a 關係來打造元件間的關係.md",
    "develop/render/SGML 是標準標籤語言，以這語言為基底來打造出HTML，隨後以精簡SGML的形式來推出XML，並讓XML去支援HTML所欠缺的不足.md",
    "develop/OS/stream 是指資料上的流動，pipe則是導向資料上的流動至特定方向的介面，pipeline則是由多個pipe所構成的介面，每個pipe都各將資料以stream導向至另一方.md",
    "develop/software engineering/Coupling 和 Cohesion 之間的關係：當Cohesion程度高的話，勢必是將多個程式區塊合併成一個程式區塊從而減少Coupling，因此Cohesion越高，Coupling就越低。.md",
    "develop/software engineering/cohesion 是一種軟體開發衡量的標準，指個多個程式區塊能夠凝聚成模組的程度，主要衡量能否以模組來管理程式區塊.md",
    "develop/React/React Componet 傳統命名是以upper camel case，且App.js會是主要Virtual DOM中的根節點.md",
    "develop/JavaScript/JavaScript 是一個具有編譯、直譯特性的直譯語言，執行前會先編譯中間碼然後邊解析邊執行.md"
  ]
}