{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "5ae2a941dfc6df32",
        "type": "leaf",
        "state": {
          "type": "markdown",
          "state": {
            "file": "緩存用來決定哪些資料區塊先被釋放的演算法：LRU、LFU、FIFO.md",
            "mode": "source"
          }
        }
      },
      {
        "id": "2c3fb96976c95896",
        "type": "leaf",
        "state": {
          "type": "markdown",
          "state": {
            "file": "緩存用來決定哪些資料區塊先被釋放的演算法：LRU、LFU、FIFO.md",
            "mode": "preview"
          }
        }
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "c14f85f051c47b19",
    "type": "split",
    "children": [
      {
        "id": "cb59ae0977574a2f",
        "type": "tabs",
        "children": [
          {
            "id": "6cafff7fd047a3d6",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {}
            }
          },
          {
            "id": "d2335b6cc36453b9",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "[[Redis",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 414.5
  },
  "right": {
    "id": "818cdd2c8d559c63",
    "type": "split",
    "children": [
      {
        "id": "d660f5648f3292d8",
        "type": "tabs",
        "children": [
          {
            "id": "dc2c437bbcb9c81a",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "緩存用來決定哪些資料區塊先被釋放的演算法：LRU、LFU、FIFO.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "1d6a45ea9d33bb93",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "active": "5ae2a941dfc6df32",
  "lastOpenFiles": [
    "緩存用來決定哪些資料區塊先被釋放的演算法：LRU、LFU、FIFO.md",
    "Key eviction 是Redis 釋放記憶體空間的策略.md",
    "develop/redis key上的過期策略為active deletion + passive deletion.md",
    "Redis.md",
    "async function 會報錯.md",
    "develop/以write-hit為主的write through和write back(write behind)這兩種寫入策略通常會為了一致性而與資料庫同步資料.md",
    "MOC/Redis MOC.md",
    "pots/redis 刪除過期鍵值有兩種方式：鍵值有被存取才去檢查過期和刪除、每隔一段時間挑選幾個鍵來檢查過期和刪除.md",
    "inbox/JS物件解構可以依據屬性名稱來獲取對應屬性值並賦予在新的變數值.md",
    "develop/Read-Write Splitting 是指在多個主機共享同個資料庫資料的情況下專門提供專門讀取資料的主機和專門寫資料的主機.md"
  ]
}