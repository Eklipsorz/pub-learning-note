{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "cad4d2ecd09ca184",
        "type": "leaf",
        "state": {
          "type": "markdown",
          "state": {
            "file": "inbox/React：useEffect 使用方式是替當前元件註冊effect這個hook並於每個渲染階段下來判定是否能執行對應的callback.md",
            "mode": "source",
            "source": false
          }
        }
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "aae06c38208a1036",
    "type": "split",
    "children": [
      {
        "id": "85a59d2c54c575cc",
        "type": "tabs",
        "children": [
          {
            "id": "d9546d4d0b544fb7",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {}
            }
          },
          {
            "id": "423a385f7547e8c2",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "和 dependencies",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "byModifiedTime"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 527
  },
  "right": {
    "id": "acffa8a6b0911db3",
    "type": "split",
    "children": [
      {
        "id": "b058356d42c47057",
        "type": "tabs",
        "children": [
          {
            "id": "a6555039f4ed3291",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "inbox/React：useEffect 使用方式是替當前元件註冊effect這個hook並於每個渲染階段下來判定是否能執行對應的callback.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3cf7a667459c6b46",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "active": "d9546d4d0b544fb7",
  "lastOpenFiles": [
    "inbox/React：useEffect & Dependencies 之間關係就在於每一次在updating階段時effect被觸發時會檢查是否有任一dependency有改變而執行對應的callback.md",
    "inbox/React：useEffect 使用方式是替當前元件註冊effect這個hook並於每個渲染階段下來判定是否能執行對應的callback.md",
    "develop/React/前端框架放置靜態資源的地方為public和src目錄下的assets，前者並不會受到webpack給處理，後者可能會因模組依賴關係圖而跟著被轉換和處理.md",
    "inbox/JS：closure會有對應的bytecode來建立，來替每個函式A所回傳的函式物件B建立closure，執行時會掃描函式B的scope和其他scope來幫助建立識別字和實體物件之間的關係.md",
    "inbox/React：當元件上註冊了useEffect並觸發unmount上的componentWillUnmount時，無論dependency是什麼，都會執行cleanup，而非side effect.md",
    "MOC/React MOC.md",
    "inbox/React：effect 是指除了元件本身所要做的主要功能-渲染元件、與使用者互動來管理狀態以外的額外效果，額外效果會是指脫離渲染週期的任意功能.md",
    "inbox/React：useEffect在面臨連續發送事件觸發或請求的場景下是要取得最後一個請求資訊，那麼勢必得用debouncing才能在減少不必要的浪費下取得最後結果.md",
    "inbox/React：useEffect cleanup 技術主要是停止當前side effect所產生的非同步任務.md",
    "inbox/React：useReducer 是React 內建的HOOK，最主要是以多個狀態歸納成一個大狀態 的方式來控管狀態.md"
  ]
}