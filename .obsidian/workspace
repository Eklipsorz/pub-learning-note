{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "07f572f50b6bbfb8",
        "type": "leaf",
        "state": {
          "type": "markdown",
          "state": {
            "file": "develop/belazy-shop-sideproject/Belazy-postman bug會因為接收源自於自製錯誤物件而陷入無限循環.md",
            "mode": "source"
          }
        }
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "66416f18f29f34fa",
    "type": "split",
    "children": [
      {
        "id": "42a59f4bf034c0cb",
        "type": "tabs",
        "children": [
          {
            "id": "adddaf817b9157f2",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {}
            }
          },
          {
            "id": "adf600677adb91a9",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "Databse]]",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 494.5
  },
  "right": {
    "id": "22f1abebee47890e",
    "type": "split",
    "children": [
      {
        "id": "d5f1f2a4e417c6ed",
        "type": "tabs",
        "children": [
          {
            "id": "e51959da82f4dbd1",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "develop/belazy-shop-sideproject/Belazy-postman bug會因為接收源自於自製錯誤物件而陷入無限循環.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "f2886ad285f31bd5",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "active": "07f572f50b6bbfb8",
  "lastOpenFiles": [
    "develop/belazy-shop-sideproject/Belazy-postman bug會因為接收源自於自製錯誤物件而陷入無限循環.md",
    "develop/belazy-shop-sideproject/Belazy - 購物車內項目刪除時的緩存和資料庫之間同步方案.md",
    "develop/Database Cursor 會使用Shared Lock來將要給開發者存取的資料集合鎖死，以避免被人修改.md",
    "SQL 語法中的JOIN 查詢 皆先將相關連的表格連結再一起並另外儲存，然後再從中讓集合的每個元素去從儲存結果找到相關連的紀錄.md",
    "develop/Redis Scan 是按依據數量來對資料庫的資料來分頁並且提供開發者以指定cursor來導向對應的資料群組.md",
    "Forward-only cursor 是只紀錄使用者接下來要指向的資料集合，過去所遍歷的資料集合將會直接釋放.md",
    "develop/Redis KEYS 指令的缺點主要有沒分頁、資料越多成本越高的O(n)、前兩者導致的阻塞問題.md",
    "develop/SQL/Database - Lazy Loading 是當索求需求來臨時才會索求特定資料，且不會把結果儲存，其餘時間點都維持不執行索求.md",
    "develop/belazy-shop-sideproject/購物車資料同步方案會以客戶端能看到的正確資料為主.md",
    "develop/緩存用來決定哪些資料區塊先被釋放的演算法：LRU、LFU、FIFO.md"
  ]
}