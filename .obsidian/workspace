{
  "main": {
    "id": "6d8cc76c7f85bcaa",
    "type": "split",
    "children": [
      {
        "id": "d70c2b72aeaa2b78",
        "type": "leaf",
        "state": {
          "type": "markdown",
          "state": {
            "file": "inbox/React：React.memo.md",
            "mode": "source",
            "source": false
          }
        }
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "184c5734690b3c9c",
    "type": "split",
    "children": [
      {
        "id": "4680111e485df9e0",
        "type": "tabs",
        "children": [
          {
            "id": "b4db86c1bb9cb649",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {}
            }
          },
          {
            "id": "6941822edf359a99",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "debounc",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": true,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "b7ac353bc18ac458",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 382
  },
  "right": {
    "id": "1b728af4a278cee2",
    "type": "split",
    "children": [
      {
        "id": "91704a7a3c315761",
        "type": "tabs",
        "children": [
          {
            "id": "b1f7a905b774f5e4",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "inbox/React：React.memo.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3fbbeb2a69d755ad",
            "type": "leaf",
            "state": {
              "type": "review-queue-list-view",
              "state": {}
            }
          },
          {
            "id": "023097852c3467d6",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "inbox/React：React.memo.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "bcfa94e5fcde6a0e",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "10e975eb097c2cce",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "inbox/React：React.memo.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "active": "d70c2b72aeaa2b78",
  "lastOpenFiles": [
    "inbox/React：higher-order-component 是指專門以component function C 為參數作為處理並產出component function B為結果的 component function A.md",
    "develop/food-order-project/food-order-project：從購物車移除項目的業務邏輯.md",
    "develop/food-order-project/food-order-project：實現按鈕能夠呈現animation效果-bump.md",
    "inbox/useEffect vs. useLayoutEffect 觸發執行的時機點：前者是都會在渲染後和移除前才觸發，後者是在渲染前的layout處理時觸發韓移除前觸發.md",
    "inbox/React spread attributes  是利用JS原生的spread operator對於物件操作的效果為基礎來 針對 component所擁有的屬性(attribute)進行擴張.md",
    "inbox/switch 不能夠放let 或者 const 宣告？.md",
    "inbox/redis.conf 是設定Redis 伺服器預設要執行的參數.md",
    "inbox/sequelize findByPk 是依照id來找 以及每種query 也是先從id來找.md",
    "inbox/sequelize.literal 會建立不會被資料庫系統轉譯的文字內容.md",
    "develop/React/debouncing 在電腦開發實踐的手段，在連續發送事件觸發的場景下，以確保能取得最後的事件觸發資訊的形式來降低請求方和處理方之間的回應速度。.md"
  ]
}